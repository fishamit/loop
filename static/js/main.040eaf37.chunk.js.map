{"version":3,"sources":["components/Pad.module.css","components/Pad.jsx","audio/drums1.mp3","audio/drums2.mp3","audio/drums3.mp3","audio/drums4.mp3","audio/bass.mp3","audio/fx.mp3","audio/tanggu.mp3","audio/guitar.mp3","audio/synth.mp3","App.js","utils/getSamplesArray.js","index.js","App.module.css"],"names":["module","exports","inactiveStyle","border","boxShadow","textShadow","color","activeStyle","Pad","name","togglePlaying","index","playing","addRecord","recording","className","style","padContainer","pad","onClick","type","App","useState","samples","setSamples","setPlaying","setRecording","recordedData","setRecordedData","playingRecording","setPlayingRecording","interval","useRef","useEffect","tmp","push","audioObject","Audio","drums1","state","drums2","drums3","drums4","bass","fx","tanggu","guitar","synth","getSamplesArray","pause","currentTime","filter","sample","length","masterStop","deactivatePads","forEach","playAllActiveSamples","play","resetAllSamples","clearInterval","current","masterPlay","setInterval","data","time","Date","getTime","looperContainer","dashboard","dashboardGroup","label","buttonsContainer","title","disabled","startRecording","i","setTimeout","playRecording","activeIndexes","localStorage","setItem","JSON","stringify","save","savedIndexes","parse","getItem","load","padsContainer","map","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.040eaf37.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"padContainer\":\"Pad_padContainer__RFwno\",\"pad\":\"Pad_pad__1E5sQ\"};","import React from 'react';\r\nimport style from './Pad.module.css';\r\n\r\nconst inactiveStyle = {\r\n  border: '2px solid rgb(187, 187, 187)',\r\n  boxShadow: '0 0 20px rgba(187, 187, 187, 0.281)',\r\n  textShadow: '0 0 10px rgba(187, 187, 187, 0.281)',\r\n  color: 'rgb(187, 187, 187)',\r\n};\r\nconst activeStyle = {\r\n  border: '2px solid rgb(0, 200, 0)',\r\n  boxShadow: '0 0 40px rgba(0, 200, 0, 0.581)',\r\n  textShadow: '0 0 20px rgba(0, 200, 0, 0.581)',\r\n  color: 'rgb(0, 200, 0)',\r\n};\r\n\r\nconst Pad = ({ name, togglePlaying, index, playing, addRecord, recording }) => {\r\n  return (\r\n    <div className={style.padContainer}>\r\n      <div\r\n        className={style.pad}\r\n        onClick={() => {\r\n          togglePlaying(index);\r\n          if (recording) addRecord({ type: 'togglePlaying', index });\r\n        }}\r\n        style={playing ? activeStyle : inactiveStyle}\r\n      >\r\n        <h3>{name}</h3>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pad;\r\n","export default __webpack_public_path__ + \"static/media/drums1.5eb417fc.mp3\";","export default __webpack_public_path__ + \"static/media/drums2.37c82282.mp3\";","export default __webpack_public_path__ + \"static/media/drums3.27bdc145.mp3\";","export default __webpack_public_path__ + \"static/media/drums4.f77c6da4.mp3\";","export default __webpack_public_path__ + \"static/media/bass.52c24c81.mp3\";","export default __webpack_public_path__ + \"static/media/fx.2d08c654.mp3\";","export default __webpack_public_path__ + \"static/media/tanggu.3e1411b4.mp3\";","export default __webpack_public_path__ + \"static/media/guitar.230fcab8.mp3\";","export default __webpack_public_path__ + \"static/media/synth.f2d668af.mp3\";","import React, { useState, useEffect, useRef } from 'react';\nimport style from './App.module.css';\nimport Pad from './components/Pad';\nimport getSamplesArray from './utils/getSamplesArray';\nimport { FaPlay } from 'react-icons/fa';\nimport { FaStop } from 'react-icons/fa';\nimport { BsRecordFill } from 'react-icons/bs';\nimport { AiFillSave } from 'react-icons/ai';\nimport { AiFillFolderOpen } from 'react-icons/ai';\n\nconst App = () => {\n  const [samples, setSamples] = useState([]);\n  const [playing, setPlaying] = useState(false);\n  const [recording, setRecording] = useState(false);\n  const [recordedData, setRecordedData] = useState([]);\n  const [playingRecording, setPlayingRecording] = useState(false);\n\n  const interval = useRef(null);\n\n  //Initialize samples state with array of audio objects containing actual samples.\n  useEffect(() => {\n    setSamples(getSamplesArray());\n  }, []);\n\n  //Invoked when user clicks a pad. Toggles between playing/non playing state for specific pad.\n  const togglePlaying = index => {\n    const tmp = [...samples];\n    tmp[index].playing = !tmp[index].playing;\n    if (!tmp[index.playing]) {\n      tmp[index].audioObject.pause();\n      tmp[index].audioObject.currentTime = 0;\n    }\n    //If there aren't any activa pads, stop the master play state.\n    if (!tmp.filter(sample => sample.playing).length) masterStop();\n    setSamples(tmp);\n  };\n\n  //decativate all pads\n  const deactivatePads = () => {\n    const tmp = [...samples];\n    tmp.forEach(sample => (sample.playing = false));\n    setSamples(tmp);\n  };\n\n  //Plays all active pads.\n  const playAllActiveSamples = () => {\n    samples.forEach(sample => {\n      if (sample.playing) {\n        sample.audioObject.play();\n      }\n    });\n  };\n\n  //Resets the play positions & pauses the samples.\n  const resetAllSamples = () => {\n    const tmp = [...samples];\n    tmp.forEach(sample => {\n      if (sample.playing) {\n        sample.audioObject.pause();\n        sample.audioObject.currentTime = 0;\n      }\n    });\n    setSamples(tmp);\n  };\n\n  //Master stop - changes play state and clears loop interval.\n  const masterStop = () => {\n    setPlaying(false);\n    resetAllSamples();\n    clearInterval(interval.current);\n  };\n\n  //Master play - creates loop interval starts the play state.\n  const masterPlay = () => {\n    setPlaying(true);\n    playAllActiveSamples();\n    interval.current = setInterval(() => {\n      resetAllSamples();\n      playAllActiveSamples();\n    }, 8000);\n  };\n\n  //Saves active pads to localStorage.\n  const save = () => {\n    const activeIndexes = [];\n    samples.forEach((sample, index) => {\n      if (sample.playing) activeIndexes.push(index);\n    });\n    localStorage.setItem('data', JSON.stringify(activeIndexes));\n  };\n\n  //Loads active pads from localStorage.\n  const load = () => {\n    const savedIndexes = JSON.parse(localStorage.getItem('data'));\n    const tmp = [...samples];\n    for (let index of savedIndexes) {\n      tmp[index].playing = true;\n    }\n    setSamples(tmp);\n  };\n\n  //Adds a record to the recording actions array. (adds the action type + delta from start of recording)\n  const addRecord = data => {\n    const time = new Date().getTime();\n    const tmp = [\n      ...recordedData,\n      { ...data, time: time - recordedData[0].time },\n    ];\n    setRecordedData(tmp);\n  };\n\n  //Starts the recording by adding an initial element to the recording array with the start time.\n  const startRecording = () => {\n    deactivatePads();\n    const tmp = [{ time: new Date().getTime() }];\n    setRecordedData(tmp);\n    setRecording(true);\n  };\n\n  const stopRecording = () => {\n    setRecording(false);\n  };\n\n  //Plays the recording.\n  const playRecording = () => {\n    deactivatePads();\n    setPlayingRecording(true);\n    for (let i = 1; i < recordedData.length; i++) {\n      switch (recordedData[i].type) {\n        case 'masterPlay':\n          setTimeout(() => {\n            masterPlay();\n            if (i === recordedData.length - 1) setPlayingRecording(false);\n          }, recordedData[i].time);\n          break;\n        case 'masterStop':\n          setTimeout(() => {\n            masterStop();\n            if (i === recordedData.length - 1) setPlayingRecording(false);\n          }, recordedData[i].time);\n          break;\n        //Default means that the action is necessarily a pad toggle.\n        default:\n          setTimeout(() => {\n            togglePlaying(recordedData[i].index);\n            if (i === recordedData.length - 1) setPlayingRecording(false);\n          }, recordedData[i].time);\n          break;\n      }\n    }\n  };\n\n  return (\n    <>\n      <div className={style.looperContainer}>\n        <div className={style.dashboard}>\n          <div className={style.dashboardGroup}>\n            <p className={style.label}>Loop controls</p>\n            <div className={style.buttonsContainer}>\n              <button\n                title=\"Play\"\n                onClick={() => {\n                  masterPlay();\n                  if (recording) addRecord({ type: 'masterPlay' });\n                }}\n                disabled={playing}\n              >\n                <FaPlay />\n              </button>\n              <button\n                title=\"Stop\"\n                onClick={() => {\n                  masterStop();\n                  if (recording) addRecord({ type: 'masterStop' });\n                }}\n                disabled={!playing}\n              >\n                <FaStop />\n              </button>\n            </div>\n          </div>\n          <div className={style.dashboardGroup}>\n            <p className={style.label}>Record/Play</p>\n\n            <div className={style.buttonsContainer}>\n              <button\n                title=\"Record\"\n                onClick={() => {\n                  if (!recording) startRecording();\n                  else stopRecording();\n                }}\n              >\n                {recording ? (\n                  <FaStop color=\"red\" />\n                ) : (\n                  <BsRecordFill color=\"red\" />\n                )}\n              </button>\n              <button\n                disabled={\n                  !(!recording && recordedData.length > 1) || playingRecording\n                }\n                title=\"Play recording\"\n                onClick={() => {\n                  playRecording();\n                }}\n              >\n                <FaPlay />\n              </button>\n            </div>\n          </div>\n          <div className={style.dashboardGroup}>\n            <p className={style.label}>Save/load</p>\n            <div className={style.buttonsContainer}>\n              <button\n                title=\"Save\"\n                onClick={() => {\n                  save();\n                }}\n              >\n                <AiFillSave />\n              </button>\n              <button\n                title=\"Load\"\n                onClick={() => {\n                  load();\n                }}\n              >\n                <AiFillFolderOpen />\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className={style.padsContainer}>\n          {samples.map((sample, index) => (\n            <Pad\n              key={sample.name}\n              index={index}\n              togglePlaying={togglePlaying}\n              name={sample.name}\n              playing={sample.playing}\n              addRecord={addRecord}\n              recording={recording}\n            />\n          ))}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","import drums1 from '../audio/drums1.mp3';\r\nimport drums2 from '../audio/drums2.mp3';\r\nimport drums3 from '../audio/drums3.mp3';\r\nimport drums4 from '../audio/drums4.mp3';\r\nimport bass from '../audio/bass.mp3';\r\nimport fx from '../audio/fx.mp3';\r\nimport tanggu from '../audio/tanggu.mp3';\r\nimport guitar from '../audio/guitar.mp3';\r\nimport synth from '../audio/synth.mp3';\r\n\r\nexport default function getSamplesArray() {\r\n  const tmp = [];\r\n  tmp.push({ audioObject: new Audio(drums1), name: 'Drums 1', state: false });\r\n  tmp.push({ audioObject: new Audio(drums2), name: 'Drums 2', state: false });\r\n  tmp.push({ audioObject: new Audio(drums3), name: 'Drums 3', state: false });\r\n  tmp.push({ audioObject: new Audio(drums4), name: 'Drums 4', state: false });\r\n  tmp.push({ audioObject: new Audio(bass), name: 'Bass', state: false });\r\n  tmp.push({ audioObject: new Audio(fx), name: 'FX', state: false });\r\n  tmp.push({ audioObject: new Audio(tanggu), name: 'Tanggu', state: false });\r\n  tmp.push({ audioObject: new Audio(guitar), name: 'Guitar', playing: false });\r\n  tmp.push({ audioObject: new Audio(synth), name: 'Synth', state: false });\r\n  return tmp;\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"padsContainer\":\"App_padsContainer__1KYc6\",\"looperContainer\":\"App_looperContainer__2eOzY\",\"label\":\"App_label__3IcPy\",\"dashboard\":\"App_dashboard__3gTyC\"};"],"sourceRoot":""}